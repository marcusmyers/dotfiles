eval $(ssh-agent)
ssh-add -k
# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

# shortcut to this dotfiles path is $DOTFILES
export ZSH=$HOME/.oh-my-zsh
export DOTFILES=$HOME/.dotfiles
export ZSH_THEME="powerlevel10k/powerlevel10k"
export DEFAULT_USER=$USER
export USER_DOTFILES=$DOTFILES/users/$USER
# your project folder that we can `c [tab]` to
export PROJECTS=$HOME/Code
export PATH="$HOME/.linuxbrew/bin:$PATH"
export PATH="$HOME/.bin:$PATH"
export MANPATH="$HOME/.linuxbrew/share/man:$MANPATH"
export INFOPATH="$HOME/.linuxbrew/share/info:$INFOPATH"

plugins=(git)
POWERLEVEL9K_MODE='awesome-fontconfig'
source $ZSH/oh-my-zsh.sh
if [[ -d "~/.fonts" ]]; then
  source ~/.fonts/*.sh
fi
# Stash your environment variables in ~/.localrc. This means they'll stay out
# of your main dotfiles repository (which may be public, like this one), but
# you'll have access to them in your scripts.
if [[ -a ~/.localrc ]]
then
  source ~/.localrc
fi

# all of our zsh files
#typeset -U config_files
#config_files=($DOTFILES/**/*.zsh)

# load the path files
for config_file ($DOTFILES/**/*.zsh(.N)) source $config_file

# Load custom users zsh settings
for config_file ($USER_DOTFILES/**/*.user_zsh(.N)) source $config_file

# Load custom user zsh-theme
for config_file ($USER_DOTFILES/**/*.zsh-theme(.N)) source $config_file

# initialize autocomplete here, otherwise functions won't be loaded
autoload -U compinit
compinit

export PATH=$PATH:/home/mark/.go/bin
export PATH=$PATH:/home/mark/Code/go/bin

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh
